version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  redis-market:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  market-service:
    build: ./market-service
    ports:
      - "8080:8080"
    depends_on:
      redis-market:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_REDIS_HOST: redis-market
      SPRING_DATA_REDIS_PORT: 6379


  postgres-db:
    image: postgres
    environment:
      POSTGRES_USER: shiv
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: tradesimdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - postgres-db
      - redis-market
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/tradesimdb
      SPRING_DATASOURCE_USERNAME: shiv
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_DATA_REDIS_HOST: redis-market
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  portfolio-service:
    build: ./portfolio-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres-db
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/tradesimdb
      SPRING_DATASOURCE_USERNAME: shiv
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  trade-service:
    build: ./trade-service
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - portfolio-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      PORTFOLIO_BASE_URL: http://portfolio-service:8082


volumes:
  postgres-data:
    driver: local